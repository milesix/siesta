:sequential_nav: next

..  _how-to-analysis-tools:

Analysis tools
==============

This is a repository (**under construction**) of information with pointers on how to analyze
and plot particular items of data generated by Siesta.

.. note::
   Some of the tools mentioned in this how-to are covered in this
   excellent `slide presentation <https://drive.google.com/file/d/1oQs0xGMoqJ02khKfC1x3jPiwkxwUIHNy/view?usp=sharing>`_
   by Andrei Postnikov.
   
   
Electronic Structure
--------------------

* Band structures

  Use the ``gnubands`` program (with the modern options), plus
  gnuplot. See examples :ref:`here<tutorial-basic-kpoint-convergence>`.
  
* Fermi surfaces

  For this, the eig2bxsf tool can be used.

..  There is material in Visual/Fermi_Surfaces, but it needs to be
    re-generated and checked.  Note that the k-point grid needs to
    include the Gamma point, which is not the standard thing to do. In
    practice, one can run an extra calculation after initial
    convergence, re-using the DM and requesting a different mesh, and
    only one scf step (scf needed because the .EIG file is
    needed). (Future: extract eigenvalues in EIG-compatible form even
    from non-scf calculations).

  New examples should be generated. One in 'first-crystals'.
  
* Charge density

  There are three (or more, with sisl) options to plot magnitudes that
  reside on the real-space grid (densities, potentials, LDOS, etc):

  * .RHO file with g2c_ng (former grid2cube)
  * Denchar
  * .RHO file with rho2xsf (or rho2vesta)
  * sisl
    
* Wavefunctions

  Using ``denchar`` (See the manual :ref:`here<reference_denchar>`.)
  
..  Our standard way involving denchar: some setup is needed for the
    definition of the box in which to plot. A new option to denchar
    (or an automatic box info generator) can be added to get the data
    plotted in a unit cell (orthorhombic only; for the rest a new box
    has to be defined).
  
.. There is pre-packaged material in Visual/WaveFunctions, but it is
   opaque (prepared as xcrysden scripts).

* Mulliken charges

  There is no standard way to plot these.
  Suggestions are welcome for visualization tools.
  
* (p)DOS

  Two ways:

    * Using the standard block in the fdf file and post-processing the
      .PDOS file.
      
    * Generating 'COOP' output and using the mprop program in PDOS
      mode. (More options, more file space needed (but filters in the
      fdf can be used to output only interesting bands). Re-use docs
      and examples there.
      
* fat-bands

  Using the 'fat' program in the COOP suite. See :ref:`this tutorial`<tutorial-fatbands>`
 
  
* COOP/COHP

    Using the 'mprop' program in the COOP suite. See :ref:`this tutorial`<tutorial-coop-cohp>`

* Spin texture 

    Using the 'spin_texture' program in the COOP suite. See :ref:`this tutorial`<tutorial-spin-texture>`

* Spins on atoms (e.g., with xsf files with coordinates plus vectors)

  Getting the spins on the atoms can be done by post-processing the
  Mulliken charges, and maybe by special output sections generated by
  specific options.

Forces on atoms, normal modes, etc
----------------------------------

* Forces on atoms


  







